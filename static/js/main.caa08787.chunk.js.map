{"version":3,"sources":["constants/index.tsx","Category.tsx","components/Navigation.tsx","RecruitingSites.tsx","App.tsx","utils/ga.ts","index.tsx"],"names":["careerSites","name","search","jobColumns","key","dataIndex","title","fixed","render","text","record","href","target","rel","width","sorter","a","b","Company","localeCompare","defaultSortOrder","link","overlay","company","map","site","index","Item","className","onClick","e","preventDefault","DownOutlined","applied","appliedRecord","getAppliedRecord","onChange","recordSet","Set","has","delete","add","newAppliedRecord","Array","from","localStorage","setItem","JSON","stringify","window","dispatchEvent","Event","checked","includes","rawRecord","getItem","parse","Category","data","category","useParams","useState","dataSource","setDataSource","useEffect","reloadTable","useCallback","state","addEventListener","removeEventListener","columns","pagination","total","length","pageSize","hideOnSinglePage","scroll","x","Sider","Layout","Navigation","menu","style","overflow","height","position","left","selectedKeys","defaultSelectedKeys","theme","tab","to","RecruitingSites","fontSize","paddingBottom","URL","Name","App","Content","Header","setMenu","allData","setAllData","setCareerSites","history","useHistory","console","log","ReactGA","initialize","listen","location","pathname","set","page","pageview","tabs","Map","axios","get","then","res","html","viewport","querySelector","childNodes","forEach","node","id","sheetMenu","value","tabName","innerText","tableBody","columnsNameRow","columnsName","i","push","tr","rowData","j","decode","tabList","error","wrapper","minHeight","path","marginLeft","textAlign","padding","backgroundColor","maxWidth","margin","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.caa08787.chunk.js","sourcesContent":["import { ColumnsType } from \"antd/es/table\";\nimport { Menu, Dropdown, Button, Checkbox } from \"antd\";\nimport { DownOutlined } from \"@ant-design/icons\";\n\nexport const dataURL =\n  \"https://docs.google.com/spreadsheets/d/e/2PACX-1vScDAvmEaLUZS4yWIvVLkDsb3vZjy_3vJvllPxtrseZx0G8gphZSngeKk-x16-vnthmoHORXj-3GApx/pubhtml\";\n\nexport const spreadsheetURL =\n  \"https://docs.google.com/spreadsheets/d/1xnufjjVD6_CpvanNPJa36XaycK2VMFoRlLE4OdWBQq4/edit?usp=sharing\";\nconst careerSites = [\n  {\n    name: \"LinkedIn\",\n    search: \"https://www.linkedin.com/jobs/search/?keywords=\",\n  },\n  {\n    name: \"Indeed\",\n    search: \"https://www.indeed.com/jobs?q=\",\n  },\n  {\n    name: \"Glassdoor\",\n    search: \"https://www.glassdoor.com/Search/results.htm?keyword=\",\n  },\n  {\n    name: \"Monster\",\n    search: \"https://www.monster.com.hk/srp/results?query=\",\n  },\n  {\n    name: \"Handshake\",\n    search: \"https://uw.joinhandshake.com/postings?query=\",\n  },\n  {\n    name: \"Canvas\",\n    search: \"https://www.canvas.com/app/discover/jobs\",\n  },\n];\n\nconst careerSitesMenu = (company: string) => (\n  <Menu>\n    {careerSites.map((site, index) => (\n      <Menu.Item key={index}>\n        <a\n          href={\n            site.name !== \"Canvas\" ? `${site.search}${company}` : site.search\n          }\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {site.name}\n        </a>\n      </Menu.Item>\n    ))}\n  </Menu>\n);\n\nexport interface ICompany {\n  key: number;\n  Company: string;\n  \"Official Website\": string;\n  \"What they do\": string;\n  Careers: string;\n  Internship: string;\n  applied: boolean;\n}\n\nexport const jobColumns: ColumnsType<ICompany> = [\n  {\n    key: \"Company\",\n    dataIndex: \"Company\",\n    title: \"Company\",\n    fixed: \"left\",\n    render: (text, record) => (\n      <a\n        href={record[\"Official Website\"]}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {text}\n      </a>\n    ),\n    width: 150,\n    sorter: (a, b) => a.Company.localeCompare(b.Company),\n    defaultSortOrder: \"ascend\",\n  },\n  {\n    key: \"What they do\",\n    dataIndex: \"What they do\",\n    title: \"What they do\",\n    width: 400,\n  },\n  {\n    key: \"Careers\",\n    dataIndex: \"Careers\",\n    title: \"Careers\",\n    render: (link) => {\n      if (link) {\n        return (\n          <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n            Careers\n          </a>\n        );\n      }\n    },\n    width: 150,\n  },\n  {\n    key: \"Internship\",\n    dataIndex: \"Internship\",\n    title: \"Internship Website\",\n    render: (link) => {\n      if (link) {\n        return (\n          <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n            Internship\n          </a>\n        );\n      }\n    },\n    width: 150,\n  },\n  {\n    key: \"Career Sites\",\n    dataIndex: \"Career Sites\",\n    title: \"Career Sites\",\n    render: (text, record) => {\n      return (\n        <Dropdown overlay={careerSitesMenu(record.Company)}>\n          <Button\n            className=\"ant-dropdown-link\"\n            onClick={(e) => e.preventDefault()}\n          >\n            Career Sites <DownOutlined />\n          </Button>\n        </Dropdown>\n      );\n    },\n    width: 150,\n  },\n  {\n    key: \"applied\",\n    dataIndex: \"applied\",\n    title: \"Applied\",\n    render: (applied, record) => {\n      const appliedRecord = getAppliedRecord();\n      const updateApplied = (e: any) => {\n        let recordSet = new Set(appliedRecord);\n        if (recordSet.has(record.Company)) {\n          recordSet.delete(record.Company);\n        } else {\n          recordSet.add(record.Company);\n        }\n        const newAppliedRecord = Array.from(recordSet);\n        localStorage.setItem(\"applied\", JSON.stringify(newAppliedRecord));\n        window.dispatchEvent(new Event(\"storage\"));\n      };\n      return (\n        <Checkbox\n          onChange={updateApplied}\n          checked={appliedRecord.includes(record.Company)}\n        >\n          Applied\n        </Checkbox>\n      );\n    },\n    width: 150,\n  },\n];\n\nconst getAppliedRecord = () => {\n  const rawRecord = localStorage.getItem(\"applied\");\n  let appliedRecord: any[] = [];\n  if (rawRecord) appliedRecord = JSON.parse(rawRecord);\n  return appliedRecord;\n};\n","import { useState, useCallback } from \"react\";\nimport { Table } from \"antd\";\nimport { useParams } from \"react-router-dom\";\nimport { jobColumns, ICompany } from \"./constants\";\nimport { useEffect } from \"react\";\n\ninterface IProps {\n  data: any;\n}\n\nconst Category = ({ data }: IProps) => {\n  const { category } = useParams<{ category: string }>();\n  const [dataSource, setDataSource] = useState<ICompany[]>([]);\n\n  useEffect(() => {\n    if (data[category]) {\n      setDataSource(data[category]);\n    } else {\n      setDataSource([]);\n    }\n  }, [category, data]);\n\n  const reloadTable = useCallback(() => {\n    setDataSource((state) => [...state]);\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener(\"storage\", reloadTable);\n    reloadTable();\n    return () => {\n      window.removeEventListener(\"storage\", reloadTable);\n    };\n  }, [reloadTable]);\n\n  return (\n    <Table\n      columns={jobColumns}\n      dataSource={dataSource}\n      pagination={{\n        total: dataSource.length,\n        pageSize: dataSource.length,\n        hideOnSinglePage: true,\n      }}\n      scroll={{x: true}}\n    />\n  );\n};\n\nexport default Category;\n","import { Layout, Menu } from \"antd\";\nimport { Link, useParams } from \"react-router-dom\";\n\nconst { Sider } = Layout;\n\ninterface IProps {\n  menu: any[];\n}\nconst Navigation = ({ menu }: IProps) => {\n  const { category } = useParams<{ category: string }>();\n\n  return (\n    <Sider\n      style={{\n        overflow: \"auto\",\n        height: \"100vh\",\n        position: \"fixed\",\n        left: 0,\n      }}\n    >\n      <Menu selectedKeys={[category || \"Career Sites\"]} defaultSelectedKeys={[\"Career Sites\"]} theme=\"light\">\n        {menu.map((tab) => (\n          <Menu.Item key={tab.name}>\n            <Link to={tab.name !== \"Career Sites\" ? tab.name : \"/\"}>\n              {tab.name}\n            </Link>\n          </Menu.Item>\n        ))}\n      </Menu>\n    </Sider>\n  );\n};\n\nexport default Navigation;\n","interface IProps {\n  careerSites: {Name: string, URL: string}[];\n}\nconst RecruitingSites = ({careerSites}: IProps) => {\n  // const careerSites = [\n  //   {\n  //     name: \"LinkedIn\",\n  //     url: \"https://www.linkedin.com/jobs/\",\n  //   },\n  //   {\n  //     name: \"Indeed\",\n  //     url: \"https://www.indeed.jobs/available-jobs/\",\n  //   },\n  //   {\n  //     name: \"Glassdoor\",\n  //     url: \"https://www.glassdoor.com/member/home/index.htm\",\n  //   },\n  //   { name: \"Monster\", url: \"https://www.monster.com/jobs/\" },\n  //   {\n  //     name: \"Handshake\",\n  //     url: \"https://joinhandshake.com/\",\n  //   },\n  //   { name: \"Canvas\", url: \"https://www.canvas.com/app/discover/jobs\" },\n  // ];\n  return (\n    <div>\n      <ul style={{ fontSize: 18 }}>\n        {careerSites.map((site, index) => (\n          <li key={index} style={{ paddingBottom: 16 }}>\n            <a href={site.URL} rel=\"noopener noreferrer\" target=\"_blank\">\n              {site.Name}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default RecruitingSites;\n","import { useState, useEffect } from \"react\";\nimport { HashRouter, Switch, Route, useHistory } from \"react-router-dom\";\nimport { Layout } from \"antd\";\nimport axios from \"axios\";\nimport { parse } from \"node-html-parser\";\nimport { decode } from \"html-entities\";\nimport Category from \"./Category\";\nimport Navigation from \"./components/Navigation\";\nimport RecruitingSites from \"./RecruitingSites\";\nimport { initGA, logPageView } from \"./utils/ga\";\nimport { dataURL, spreadsheetURL } from \"./constants\";\n\nfunction App() {\n  const { Content, Header } = Layout;\n  const [menu, setMenu] = useState<any[]>([]);\n  const [allData, setAllData] = useState<any>({});\n  const [careerSites, setCareerSites] = useState<any[]>([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    initGA();\n  }, []);\n\n  useEffect(() => {\n    return history.listen((location) => {\n      logPageView(location.pathname);\n    });\n  }, [history]);\n\n  useEffect(() => {\n    const wrapper = async () => {\n      const tabs = new Map();\n      try {\n        const res = await axios\n          .get(dataURL)\n          .then((res) => {\n            return res.data;\n          })\n          .then((res) => {\n            return res;\n          });\n        const html = parse(res);\n\n        const viewport = html.querySelector(\"#sheets-viewport\");\n        viewport.childNodes.forEach((node: any) => {\n          tabs.set(node.id, { id: node.id, key: node.id });\n        });\n\n        const sheetMenu = html.querySelector(\"#sheet-menu\");\n        tabs.forEach((value, id) => {\n          const tabName = sheetMenu.querySelector(`#sheet-button-${id}`)\n            .childNodes[0].innerText;\n          tabs.set(id, {\n            ...tabs.get(id),\n            name: tabName,\n          });\n        });\n\n        let allData: any = {};\n        tabs.forEach((value, id) => {\n          const tableBody = viewport.querySelector(`#${id} table tbody`);\n          const columnsNameRow = tableBody.childNodes[0];\n          let columnsName = [];\n          let data = [];\n          for (let i = 0; i < columnsNameRow.childNodes.length; i++) {\n            columnsName.push(columnsNameRow.childNodes[i].innerText);\n          }\n          for (let i = 1; i < tableBody.childNodes.length; i++) {\n            const tr = tableBody.childNodes[i];\n            let rowData: any = {};\n            for (let j = 1; j < tr.childNodes.length; j++) {\n              const td = tr.childNodes[j];\n              const text = td.innerText;\n              rowData[columnsName[j]] = decode(text);\n            }\n            rowData.key = i;\n            data.push(rowData);\n          }\n          if (id === \"0\") {\n            setCareerSites(data);\n          } else {\n            const category = value.name;\n            allData[category] = data;\n          }\n        });\n        let tabList: any[] = [];\n        tabs.forEach((tab) => {\n          tabList.push(tab);\n        });\n        setMenu(tabList);\n        setAllData(allData);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    wrapper();\n  }, []);\n\n  return (\n    <HashRouter>\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <Switch>\n          <Route path={[\"/:category\", \"/\"]}>\n            <Navigation menu={menu} />\n          </Route>\n        </Switch>\n        <Layout style={{ marginLeft: 200 }}>\n          <Header\n            style={{\n              textAlign: \"center\",\n              padding: 10,\n              backgroundColor: \"rgb(240, 242, 245)\",\n            }}\n          >\n            <h3 style={{ fontSize: 30 }}>Company List</h3>\n          </Header>\n          <div style={{ textAlign: \"center\" }}>\n            <p>\n              Data are extracted from{\" \"}\n              <a\n                href={spreadsheetURL}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                here\n              </a>\n              . Delay up to 5 minutes\n            </p>\n          </div>\n          <Content style={{ padding: 10 }}>\n            <div style={{ width: \"95%\", maxWidth: \"1280px\", margin: \"0 auto\" }}>\n              <Switch>\n                <Route exact path={[\"/\", \"/0\"]}>\n                  <RecruitingSites careerSites={careerSites} />\n                </Route>\n                <Route path=\"/:category\">\n                  <Category data={allData} />\n                </Route>\n              </Switch>\n            </div>\n          </Content>\n        </Layout>\n      </Layout>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import ReactGA from \"react-ga\";\n\nexport const initGA = () => {\n  console.log(\"GA init\");\n  ReactGA.initialize(\"G-CWMKLHSQF3\");\n};\n\nexport const logPageView = (pathname: string) => {\n  ReactGA.set({ page: pathname });\n  ReactGA.pageview(pathname);\n};\n\nexport const logEvent = (category = \"\", action = \"\") => {\n  if (category && action) {\n    ReactGA.event({ category, action });\n  }\n};\n\nexport const logException = (description = \"\", fatal = false) => {\n  if (description) {\n    ReactGA.exception({ description, fatal });\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}